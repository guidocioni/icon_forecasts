#!/bin/bash

# Folder to be used to download and process data
export MODEL_DATA_FOLDER="/Volumes/Data/temp/icon-eu/"
export HOME_FOLDER=$(pwd)
export N_CONCUR_PROCESSES=4 
export NCFTP_BOOKMARK="altervista"
DATA_DOWNLOAD=true
DATA_PLOTTING=false
DATA_UPLOAD=false

##### LOAD functions to download model data
. ./functions_download_dwd.sh
export SHELL=$(type -p bash)
# We need to open many files at the same time
ulimit -Sn 4096
# 
source ~/.bash_profile
# acivate our environment 
#conda activate nwp-py2
###########################################

mkdir -p ${MODEL_DATA_FOLDER}it
mkdir -p ${MODEL_DATA_FOLDER}de

# Retrieve run ##########################
export year=`date +"%Y"`
export month=`date +"%m"`
export day=`date +"%d"`
export hour=`date +"%H"`
export hour_no_zero=`date -u +"%-H"`
# note that this date is in UTC which is needed for retrieving the correct run!

if [ "$hour_no_zero" -ge 4 ] && [ "$hour_no_zero" -lt 9 ] 
then 
 run="00"
elif [ "$hour_no_zero" -ge 9 ] && [ "$hour_no_zero" -lt 16 ] 
then
 run="06"
elif [ "$hour_no_zero" -ge 16 ] && [ "$hour_no_zero" -lt 21 ] 
then
 run="12"
elif [ "$hour_no_zero" -ge 21 ] 
then
 run="18"
fi

export run

###########################################

# Move to the data folder to do processing
cd ${MODEL_DATA_FOLDER} || { echo 'Cannot change to DATA folder' ; exit 1; }

# SECTION 1 - DATA DOWNLOAD ############################################################

if [ "$DATA_DOWNLOAD" = true ]; then
	# Remove older files
	rm ${MODEL_DATA_FOLDER}*.nc
	rm ${MODEL_DATA_FOLDER}*.grib2

	# Invariant
	download_invariant_icon_eu

	#2-D variables
	variables=("T_2M" "TD_2M" "U_10M" "V_10M" "PMSL" "CAPE_ML" "VMAX_10M" "TOT_PREC" \
	"CLCL" "CLCH" "CLCT" "SNOWLMT" "HZEROCL" "H_SNOW" "SNOW_GSP"\
	"SNOW_CON" "RAIN_GSP" "RAIN_CON" "TMAX_2M" "TMIN_2M" "WW")
	parallel -j ${N_CONCUR_PROCESSES} --delay 1 download_merge_2d_variable_icon_eu ::: "${variables[@]}"

	#3-D variables on pressure levels
	variables=("T" "FI" "RELHUM" "U" "V" "CLC")
	parallel -j ${N_CONCUR_PROCESSES} --delay 2 download_merge_3d_variable_icon_eu ::: "${variables[@]}"

	# #soil levelsls
	download_merge_soil_variable_icon_eu "W_SO"

fi 

############################################################


# SECTION 2 - DATA PLOTTING ############################################################

if [ "$DATA_PLOTTING" = true ]; then
	python --version
	cp ${HOME_FOLDER}/plotting/*.py ${MODEL_DATA_FOLDER}

	export QT_QPA_PLATFORM=offscreen # Needed to avoid errors when using Python without display

	python plot_meteogram.py Hamburg Pisa Rome Milano Naples Brocken Palermo Toulouse Utrecht Sassari Cheremule

	scripts=("plot_winter.py" "plot_cape.py" "plot_convergence.py" "plot_gph_t_500.py" "plot_gph_t_850.py" \
		"plot_gph_thetae_850.py" "plot_hsnow.py" "plot_jetstream.py" "plot_pres_t2m_winds10m.py" "plot_rain_acc.py"\
		"plot_rain_clouds.py" "plot_winds10m.py" "plot_vorticity.py" "plot_soil_moisture.py" "plot_tmax.py" "plot_tmin.py")

	projections=("euratl" "it" "de")

	parallel -j ${N_CONCUR_PROCESSES} python ::: "${scripts[@]}" ::: "${projections[@]}"
fi

############################################################


# SECTION 3 - IMAGES UPLOAD ############################################################
# Use ncftpbookmarks to add a new FTP server with credentials
if [ "$DATA_UPLOAD" = true ]; then
	# First upload meteograms
	ncftpput -R -v ${NCFTP_BOOKMARK} icon_italy/meteograms meteogram_*
	#
	# Then upload the other pictures
	#
	images_output=("gph_t_850" "gph_t_500" "gph_thetae_850" "precip_clouds" "winds10m" "winds_jet" "vort_850" "hsnow" "cape"\
		"conv" "soil_moisture" "t_v_pres" "precip_acc" "vort_850" "winter" "tmax" "tmin")

	# suffix for naming
	projections_output=("" "it/" "de/")
	# remote folder on server
	projections_output_folder=("icon_forecasts" "icon_italy" "icon_de")

	# Create a lisf of all the images to upload 
	upload_elements=()
	for i in "${!projections_output[@]}"; do
		for j in "${images_output[@]}"; do
			upload_elements+=("${projections_output_folder[$i]}/${j} ./${projections_output[$i]}${j}_*")
		done
	done

	# Finally upload the images 
	for k in "${upload_elements[@]}"; do
		ncftpput -R -v ${NCFTP_BOOKMARK} ${k}
	done

	# To be parallelized in the future if the FTP server accepts multiple connections
	# this doesn't work 
	# parallel -j 2 ncftpput -R -v ${NCFTP_BOOKMARK} ::: "${upload_elements[@]}"

fi 

############################################################

# SECTION 4 - CLEANING ############################################################

#Remove images locally
rm ${MODEL_DATA_FOLDER}*.png
rm ${MODEL_DATA_FOLDER}de/*.png
rm ${MODEL_DATA_FOLDER}it/*.png
rm ${MODEL_DATA_FOLDER}*.py

############################################################

cd -
